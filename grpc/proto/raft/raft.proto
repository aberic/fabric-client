syntax = "proto3";

package raft;

message Beat {
    bytes beat = 1;
}

// ReqElection 发起选举请求对象
message ReqElection {
    string brokerID = 1;
    int32 term = 2; // 任期
}

message ReqLeader {
    Node node = 1;
}

// ReqElection 发起选举请求对象
message ReqFollow {
    Node node = 1;
    int32 term = 2; // 任期
}

message NodeMap {
    map<string, Node> nodes = 1;
}

message Node {
    string id = 1;
    string addr = 2;
    string http = 3; // HTTP port端口号
    string rpc = 4; // RPC port端口号
    int64 lastActive = 5; // 节点最后一次活跃时间戳s
    Status status = 6;
}

// ReqElection 发起选举请求对象
message Leader {
    string brokerID = 1;
    int32 term = 2; // 任期
}

message Resp {
    Type type = 1;
    oneof Result {
        ReqElection election = 2;
        LeaderNode leader = 3;
    }
}

message LeaderNode {
    Node leader = 1;
    int32 term = 2;
}

enum Type {
    OK = 0;
    TERM = 1; // 当前请求任期小于自身所处任期
    FOLLOW_ME = 2; // 告知跟随我
    VOTE_ME = 3; // 告知给我投票
    LEADER_NODE = 4; // 告知当前Leader节点
}

enum Status {
    LEADER = 0;
    FOLLOWER = 1;
    CANDIDATE = 2;
}
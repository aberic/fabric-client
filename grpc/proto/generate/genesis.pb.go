// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/proto/generate/genesis.proto

package generate

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ReqGenesis struct {
	League               *LeagueInBlock `protobuf:"bytes,1,opt,name=league,proto3" json:"league,omitempty"`
	Orgs                 []*OrgInBlock  `protobuf:"bytes,2,rep,name=orgs,proto3" json:"orgs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ReqGenesis) Reset()         { *m = ReqGenesis{} }
func (m *ReqGenesis) String() string { return proto.CompactTextString(m) }
func (*ReqGenesis) ProtoMessage()    {}
func (*ReqGenesis) Descriptor() ([]byte, []int) {
	return fileDescriptor_a37cb49bec1cbcbc, []int{0}
}

func (m *ReqGenesis) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqGenesis.Unmarshal(m, b)
}
func (m *ReqGenesis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqGenesis.Marshal(b, m, deterministic)
}
func (m *ReqGenesis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqGenesis.Merge(m, src)
}
func (m *ReqGenesis) XXX_Size() int {
	return xxx_messageInfo_ReqGenesis.Size(m)
}
func (m *ReqGenesis) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqGenesis.DiscardUnknown(m)
}

var xxx_messageInfo_ReqGenesis proto.InternalMessageInfo

func (m *ReqGenesis) GetLeague() *LeagueInBlock {
	if m != nil {
		return m.League
	}
	return nil
}

func (m *ReqGenesis) GetOrgs() []*OrgInBlock {
	if m != nil {
		return m.Orgs
	}
	return nil
}

type RespGenesis struct {
	Code                 Code     `protobuf:"varint,1,opt,name=code,proto3,enum=generate.Code" json:"code,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespGenesis) Reset()         { *m = RespGenesis{} }
func (m *RespGenesis) String() string { return proto.CompactTextString(m) }
func (*RespGenesis) ProtoMessage()    {}
func (*RespGenesis) Descriptor() ([]byte, []int) {
	return fileDescriptor_a37cb49bec1cbcbc, []int{1}
}

func (m *RespGenesis) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespGenesis.Unmarshal(m, b)
}
func (m *RespGenesis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespGenesis.Marshal(b, m, deterministic)
}
func (m *RespGenesis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespGenesis.Merge(m, src)
}
func (m *RespGenesis) XXX_Size() int {
	return xxx_messageInfo_RespGenesis.Size(m)
}
func (m *RespGenesis) XXX_DiscardUnknown() {
	xxx_messageInfo_RespGenesis.DiscardUnknown(m)
}

var xxx_messageInfo_RespGenesis proto.InternalMessageInfo

func (m *RespGenesis) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_Success
}

func (m *RespGenesis) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type ReqChannelTx struct {
	ChannelID            string      `protobuf:"bytes,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Genesis              *ReqGenesis `protobuf:"bytes,2,opt,name=genesis,proto3" json:"genesis,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReqChannelTx) Reset()         { *m = ReqChannelTx{} }
func (m *ReqChannelTx) String() string { return proto.CompactTextString(m) }
func (*ReqChannelTx) ProtoMessage()    {}
func (*ReqChannelTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_a37cb49bec1cbcbc, []int{2}
}

func (m *ReqChannelTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqChannelTx.Unmarshal(m, b)
}
func (m *ReqChannelTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqChannelTx.Marshal(b, m, deterministic)
}
func (m *ReqChannelTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqChannelTx.Merge(m, src)
}
func (m *ReqChannelTx) XXX_Size() int {
	return xxx_messageInfo_ReqChannelTx.Size(m)
}
func (m *ReqChannelTx) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqChannelTx.DiscardUnknown(m)
}

var xxx_messageInfo_ReqChannelTx proto.InternalMessageInfo

func (m *ReqChannelTx) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

func (m *ReqChannelTx) GetGenesis() *ReqGenesis {
	if m != nil {
		return m.Genesis
	}
	return nil
}

type RespChannelTx struct {
	Code                 Code     `protobuf:"varint,1,opt,name=code,proto3,enum=generate.Code" json:"code,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespChannelTx) Reset()         { *m = RespChannelTx{} }
func (m *RespChannelTx) String() string { return proto.CompactTextString(m) }
func (*RespChannelTx) ProtoMessage()    {}
func (*RespChannelTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_a37cb49bec1cbcbc, []int{3}
}

func (m *RespChannelTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespChannelTx.Unmarshal(m, b)
}
func (m *RespChannelTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespChannelTx.Marshal(b, m, deterministic)
}
func (m *RespChannelTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespChannelTx.Merge(m, src)
}
func (m *RespChannelTx) XXX_Size() int {
	return xxx_messageInfo_RespChannelTx.Size(m)
}
func (m *RespChannelTx) XXX_DiscardUnknown() {
	xxx_messageInfo_RespChannelTx.DiscardUnknown(m)
}

var xxx_messageInfo_RespChannelTx proto.InternalMessageInfo

func (m *RespChannelTx) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_Success
}

func (m *RespChannelTx) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type LeagueInBlock struct {
	Domain               string     `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Addresses            []string   `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty"`
	BatchTimeout         int64      `protobuf:"varint,3,opt,name=BatchTimeout,proto3" json:"BatchTimeout,omitempty"`
	BatchSize            *BatchSize `protobuf:"bytes,4,opt,name=batchSize,proto3" json:"batchSize,omitempty"`
	Kafka                *Kafka     `protobuf:"bytes,5,opt,name=kafka,proto3" json:"kafka,omitempty"`
	MaxChannels          uint64     `protobuf:"varint,6,opt,name=MaxChannels,proto3" json:"MaxChannels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *LeagueInBlock) Reset()         { *m = LeagueInBlock{} }
func (m *LeagueInBlock) String() string { return proto.CompactTextString(m) }
func (*LeagueInBlock) ProtoMessage()    {}
func (*LeagueInBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_a37cb49bec1cbcbc, []int{4}
}

func (m *LeagueInBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeagueInBlock.Unmarshal(m, b)
}
func (m *LeagueInBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeagueInBlock.Marshal(b, m, deterministic)
}
func (m *LeagueInBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeagueInBlock.Merge(m, src)
}
func (m *LeagueInBlock) XXX_Size() int {
	return xxx_messageInfo_LeagueInBlock.Size(m)
}
func (m *LeagueInBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_LeagueInBlock.DiscardUnknown(m)
}

var xxx_messageInfo_LeagueInBlock proto.InternalMessageInfo

func (m *LeagueInBlock) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *LeagueInBlock) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *LeagueInBlock) GetBatchTimeout() int64 {
	if m != nil {
		return m.BatchTimeout
	}
	return 0
}

func (m *LeagueInBlock) GetBatchSize() *BatchSize {
	if m != nil {
		return m.BatchSize
	}
	return nil
}

func (m *LeagueInBlock) GetKafka() *Kafka {
	if m != nil {
		return m.Kafka
	}
	return nil
}

func (m *LeagueInBlock) GetMaxChannels() uint64 {
	if m != nil {
		return m.MaxChannels
	}
	return 0
}

type BatchSize struct {
	MaxMessageCount      uint32   `protobuf:"varint,1,opt,name=maxMessageCount,proto3" json:"maxMessageCount,omitempty"`
	AbsoluteMaxBytes     uint32   `protobuf:"varint,2,opt,name=absoluteMaxBytes,proto3" json:"absoluteMaxBytes,omitempty"`
	PreferredMaxBytes    uint32   `protobuf:"varint,3,opt,name=preferredMaxBytes,proto3" json:"preferredMaxBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchSize) Reset()         { *m = BatchSize{} }
func (m *BatchSize) String() string { return proto.CompactTextString(m) }
func (*BatchSize) ProtoMessage()    {}
func (*BatchSize) Descriptor() ([]byte, []int) {
	return fileDescriptor_a37cb49bec1cbcbc, []int{5}
}

func (m *BatchSize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchSize.Unmarshal(m, b)
}
func (m *BatchSize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchSize.Marshal(b, m, deterministic)
}
func (m *BatchSize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchSize.Merge(m, src)
}
func (m *BatchSize) XXX_Size() int {
	return xxx_messageInfo_BatchSize.Size(m)
}
func (m *BatchSize) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchSize.DiscardUnknown(m)
}

var xxx_messageInfo_BatchSize proto.InternalMessageInfo

func (m *BatchSize) GetMaxMessageCount() uint32 {
	if m != nil {
		return m.MaxMessageCount
	}
	return 0
}

func (m *BatchSize) GetAbsoluteMaxBytes() uint32 {
	if m != nil {
		return m.AbsoluteMaxBytes
	}
	return 0
}

func (m *BatchSize) GetPreferredMaxBytes() uint32 {
	if m != nil {
		return m.PreferredMaxBytes
	}
	return 0
}

type Kafka struct {
	Brokers              []string `protobuf:"bytes,1,rep,name=brokers,proto3" json:"brokers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Kafka) Reset()         { *m = Kafka{} }
func (m *Kafka) String() string { return proto.CompactTextString(m) }
func (*Kafka) ProtoMessage()    {}
func (*Kafka) Descriptor() ([]byte, []int) {
	return fileDescriptor_a37cb49bec1cbcbc, []int{6}
}

func (m *Kafka) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Kafka.Unmarshal(m, b)
}
func (m *Kafka) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Kafka.Marshal(b, m, deterministic)
}
func (m *Kafka) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Kafka.Merge(m, src)
}
func (m *Kafka) XXX_Size() int {
	return xxx_messageInfo_Kafka.Size(m)
}
func (m *Kafka) XXX_DiscardUnknown() {
	xxx_messageInfo_Kafka.DiscardUnknown(m)
}

var xxx_messageInfo_Kafka proto.InternalMessageInfo

func (m *Kafka) GetBrokers() []string {
	if m != nil {
		return m.Brokers
	}
	return nil
}

// ReqOrderers 请求生成指定联盟默认orderer服务集合
type OrgInBlock struct {
	Domain               string        `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Name                 string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type                 OrgType       `protobuf:"varint,4,opt,name=type,proto3,enum=generate.OrgType" json:"type,omitempty"`
	AnchorPeers          []*AnchorPeer `protobuf:"bytes,5,rep,name=anchorPeers,proto3" json:"anchorPeers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *OrgInBlock) Reset()         { *m = OrgInBlock{} }
func (m *OrgInBlock) String() string { return proto.CompactTextString(m) }
func (*OrgInBlock) ProtoMessage()    {}
func (*OrgInBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_a37cb49bec1cbcbc, []int{7}
}

func (m *OrgInBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrgInBlock.Unmarshal(m, b)
}
func (m *OrgInBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrgInBlock.Marshal(b, m, deterministic)
}
func (m *OrgInBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrgInBlock.Merge(m, src)
}
func (m *OrgInBlock) XXX_Size() int {
	return xxx_messageInfo_OrgInBlock.Size(m)
}
func (m *OrgInBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_OrgInBlock.DiscardUnknown(m)
}

var xxx_messageInfo_OrgInBlock proto.InternalMessageInfo

func (m *OrgInBlock) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *OrgInBlock) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OrgInBlock) GetType() OrgType {
	if m != nil {
		return m.Type
	}
	return OrgType_Order
}

func (m *OrgInBlock) GetAnchorPeers() []*AnchorPeer {
	if m != nil {
		return m.AnchorPeers
	}
	return nil
}

type AnchorPeer struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnchorPeer) Reset()         { *m = AnchorPeer{} }
func (m *AnchorPeer) String() string { return proto.CompactTextString(m) }
func (*AnchorPeer) ProtoMessage()    {}
func (*AnchorPeer) Descriptor() ([]byte, []int) {
	return fileDescriptor_a37cb49bec1cbcbc, []int{8}
}

func (m *AnchorPeer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnchorPeer.Unmarshal(m, b)
}
func (m *AnchorPeer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnchorPeer.Marshal(b, m, deterministic)
}
func (m *AnchorPeer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnchorPeer.Merge(m, src)
}
func (m *AnchorPeer) XXX_Size() int {
	return xxx_messageInfo_AnchorPeer.Size(m)
}
func (m *AnchorPeer) XXX_DiscardUnknown() {
	xxx_messageInfo_AnchorPeer.DiscardUnknown(m)
}

var xxx_messageInfo_AnchorPeer proto.InternalMessageInfo

func (m *AnchorPeer) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *AnchorPeer) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func init() {
	proto.RegisterType((*ReqGenesis)(nil), "generate.ReqGenesis")
	proto.RegisterType((*RespGenesis)(nil), "generate.RespGenesis")
	proto.RegisterType((*ReqChannelTx)(nil), "generate.ReqChannelTx")
	proto.RegisterType((*RespChannelTx)(nil), "generate.RespChannelTx")
	proto.RegisterType((*LeagueInBlock)(nil), "generate.LeagueInBlock")
	proto.RegisterType((*BatchSize)(nil), "generate.BatchSize")
	proto.RegisterType((*Kafka)(nil), "generate.Kafka")
	proto.RegisterType((*OrgInBlock)(nil), "generate.OrgInBlock")
	proto.RegisterType((*AnchorPeer)(nil), "generate.AnchorPeer")
}

func init() { proto.RegisterFile("grpc/proto/generate/genesis.proto", fileDescriptor_a37cb49bec1cbcbc) }

var fileDescriptor_a37cb49bec1cbcbc = []byte{
	// 569 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0xe5, 0xc6, 0x49, 0xf1, 0xa4, 0x69, 0xe9, 0x16, 0x81, 0x55, 0x21, 0xe1, 0x5a, 0xaa,
	0x64, 0x55, 0xe0, 0x8a, 0x80, 0xb8, 0xe3, 0x22, 0xa1, 0xaa, 0x44, 0xad, 0x96, 0x9e, 0x10, 0x97,
	0x8d, 0x3d, 0x75, 0xac, 0x38, 0xbb, 0xee, 0xee, 0x5a, 0x4a, 0x79, 0x09, 0x8e, 0x3c, 0x21, 0xef,
	0x81, 0xbc, 0xb6, 0xe3, 0xa4, 0xcd, 0x8d, 0xdb, 0xcc, 0x7f, 0x7e, 0xde, 0xf9, 0xd8, 0xf1, 0xc2,
	0x49, 0x2a, 0x8b, 0xf8, 0xbc, 0x90, 0x42, 0x8b, 0xf3, 0x14, 0x39, 0x4a, 0xa6, 0xd1, 0x18, 0x2a,
	0x53, 0xa1, 0x91, 0xc9, 0xb3, 0x56, 0x3f, 0x7e, 0xb3, 0x0d, 0x46, 0x5e, 0x2e, 0x1a, 0xf4, 0xd8,
	0xdb, 0x06, 0x48, 0x54, 0x65, 0xae, 0x6b, 0xc2, 0x4f, 0x01, 0x28, 0xde, 0x7f, 0xad, 0x13, 0x90,
	0x73, 0x18, 0xe4, 0xc8, 0xd2, 0x12, 0x5d, 0xcb, 0xb3, 0x82, 0xe1, 0xf8, 0x55, 0xd8, 0x7e, 0x15,
	0x7e, 0x33, 0xfa, 0x25, 0x8f, 0x72, 0x11, 0xcf, 0x69, 0x83, 0x91, 0x00, 0x6c, 0x21, 0x53, 0xe5,
	0xee, 0x78, 0xbd, 0x60, 0x38, 0x7e, 0xd1, 0xe1, 0xd7, 0x32, 0x6d, 0x59, 0x43, 0xf8, 0x97, 0x30,
	0xa4, 0xa8, 0x8a, 0x36, 0x93, 0x0f, 0x76, 0x2c, 0x92, 0x3a, 0xcf, 0xfe, 0x78, 0xbf, 0xfb, 0xf0,
	0x42, 0x24, 0x48, 0x4d, 0x8c, 0xbc, 0x84, 0x01, 0x4a, 0x39, 0x51, 0xa9, 0xbb, 0xe3, 0x59, 0x81,
	0x43, 0x1b, 0xcf, 0xff, 0x09, 0x7b, 0x14, 0xef, 0x2f, 0x66, 0x8c, 0x73, 0xcc, 0x6f, 0x97, 0xe4,
	0x35, 0x38, 0x71, 0xed, 0x5c, 0x7e, 0x31, 0x07, 0x3a, 0xb4, 0x13, 0x48, 0x08, 0xbb, 0xcd, 0xfc,
	0xcc, 0x31, 0x1b, 0x55, 0x76, 0xad, 0xd3, 0x16, 0xf2, 0xaf, 0x60, 0x54, 0x15, 0xda, 0x1d, 0xff,
	0x3f, 0xa5, 0xfe, 0xb5, 0x60, 0xb4, 0x31, 0xb9, 0x8a, 0x4c, 0xc4, 0x82, 0x65, 0xbc, 0xa9, 0xb4,
	0xf1, 0xaa, 0x26, 0x58, 0x92, 0x48, 0x54, 0x0a, 0xeb, 0x71, 0x3a, 0xb4, 0x13, 0x88, 0x0f, 0x7b,
	0x11, 0xd3, 0xf1, 0xec, 0x36, 0x5b, 0xa0, 0x28, 0xb5, 0xdb, 0xf3, 0xac, 0xa0, 0x47, 0x37, 0x34,
	0xf2, 0x1e, 0x9c, 0x69, 0xe5, 0x7f, 0xcf, 0x7e, 0xa1, 0x6b, 0x9b, 0x56, 0x8f, 0xba, 0x62, 0xa3,
	0x36, 0x44, 0x3b, 0x8a, 0x9c, 0x42, 0x7f, 0xce, 0xee, 0xe6, 0xcc, 0xed, 0x1b, 0xfc, 0xa0, 0xc3,
	0xaf, 0x2a, 0x99, 0xd6, 0x51, 0xe2, 0xc1, 0x70, 0xc2, 0x96, 0xcd, 0x44, 0x94, 0x3b, 0xf0, 0xac,
	0xc0, 0xa6, 0xeb, 0x92, 0xff, 0xdb, 0x02, 0x67, 0x95, 0x81, 0x04, 0x70, 0xb0, 0x60, 0xcb, 0x09,
	0x2a, 0xc5, 0x52, 0xbc, 0x10, 0x25, 0xd7, 0xa6, 0xd9, 0x11, 0x7d, 0x2c, 0x93, 0x33, 0x78, 0xce,
	0xa6, 0x4a, 0xe4, 0xa5, 0xc6, 0x09, 0x5b, 0x46, 0x0f, 0x1a, 0xeb, 0x5b, 0x1a, 0xd1, 0x27, 0x3a,
	0x79, 0x0b, 0x87, 0x85, 0xc4, 0x3b, 0x94, 0x12, 0x93, 0x15, 0xdc, 0x33, 0xf0, 0xd3, 0x80, 0x7f,
	0x02, 0x7d, 0xd3, 0x03, 0x71, 0x61, 0x77, 0x2a, 0xc5, 0x1c, 0xa5, 0x72, 0x2d, 0x33, 0xd6, 0xd6,
	0xf5, 0xff, 0x58, 0x00, 0xdd, 0x9e, 0xae, 0xdd, 0xcc, 0xce, 0xc6, 0xcd, 0x10, 0xb0, 0x39, 0x5b,
	0xa0, 0x49, 0xe5, 0x50, 0x63, 0x93, 0x53, 0xb0, 0xf5, 0x43, 0x51, 0x8f, 0x79, 0x7f, 0x7c, 0xb8,
	0xb1, 0xf7, 0xb7, 0x0f, 0x05, 0x52, 0x13, 0x26, 0x9f, 0x60, 0xc8, 0x78, 0x3c, 0x13, 0xf2, 0x06,
	0xab, 0xfc, 0xfd, 0xc7, 0x7f, 0xc9, 0xe7, 0x55, 0x90, 0xae, 0x83, 0xfe, 0x47, 0x80, 0x2e, 0x54,
	0x15, 0x30, 0x13, 0x4a, 0x37, 0x0b, 0x63, 0xec, 0x4a, 0x2b, 0x84, 0xd4, 0xa6, 0xd4, 0x3e, 0x35,
	0x76, 0x74, 0x0d, 0x67, 0x99, 0x08, 0x91, 0x73, 0x21, 0xc2, 0x3b, 0x36, 0x95, 0x59, 0xfc, 0x2e,
	0xce, 0x33, 0xe4, 0x3a, 0xac, 0x9e, 0x81, 0xfa, 0x87, 0x5f, 0xe5, 0x8e, 0xf6, 0x9a, 0xcd, 0xbf,
	0xa9, 0xe4, 0x1f, 0x47, 0x5b, 0x5e, 0x8a, 0xe9, 0xc0, 0xf8, 0x1f, 0xfe, 0x05, 0x00, 0x00, 0xff,
	0xff, 0xa5, 0x3e, 0xdd, 0x14, 0x95, 0x04, 0x00, 0x00,
}

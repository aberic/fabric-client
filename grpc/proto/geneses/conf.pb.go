// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/proto/geneses/conf.proto

package geneses

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Version int32

const (
	Version_V14 Version = 0
)

var Version_name = map[int32]string{
	0: "V14",
}

var Version_value = map[string]int32{
	"V14": 0,
}

func (x Version) String() string {
	return proto.EnumName(Version_name, int32(x))
}

func (Version) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_104dc51ee168266a, []int{0}
}

// Generate 请求生成区块链配置对象
type Generate struct {
	LedgerName           string   `protobuf:"bytes,1,opt,name=ledgerName,proto3" json:"ledgerName,omitempty"`
	OrderCount           int32    `protobuf:"varint,2,opt,name=orderCount,proto3" json:"orderCount,omitempty"`
	OrgCount             int32    `protobuf:"varint,3,opt,name=orgCount,proto3" json:"orgCount,omitempty"`
	TemplateCount        int32    `protobuf:"varint,4,opt,name=templateCount,proto3" json:"templateCount,omitempty"`
	UserCount            int32    `protobuf:"varint,5,opt,name=userCount,proto3" json:"userCount,omitempty"`
	BatchTimeout         int32    `protobuf:"varint,6,opt,name=batchTimeout,proto3" json:"batchTimeout,omitempty"`
	MaxMessageCount      int32    `protobuf:"varint,7,opt,name=maxMessageCount,proto3" json:"maxMessageCount,omitempty"`
	Force                bool     `protobuf:"varint,8,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Generate) Reset()         { *m = Generate{} }
func (m *Generate) String() string { return proto.CompactTextString(m) }
func (*Generate) ProtoMessage()    {}
func (*Generate) Descriptor() ([]byte, []int) {
	return fileDescriptor_104dc51ee168266a, []int{0}
}

func (m *Generate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Generate.Unmarshal(m, b)
}
func (m *Generate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Generate.Marshal(b, m, deterministic)
}
func (m *Generate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Generate.Merge(m, src)
}
func (m *Generate) XXX_Size() int {
	return xxx_messageInfo_Generate.Size(m)
}
func (m *Generate) XXX_DiscardUnknown() {
	xxx_messageInfo_Generate.DiscardUnknown(m)
}

var xxx_messageInfo_Generate proto.InternalMessageInfo

func (m *Generate) GetLedgerName() string {
	if m != nil {
		return m.LedgerName
	}
	return ""
}

func (m *Generate) GetOrderCount() int32 {
	if m != nil {
		return m.OrderCount
	}
	return 0
}

func (m *Generate) GetOrgCount() int32 {
	if m != nil {
		return m.OrgCount
	}
	return 0
}

func (m *Generate) GetTemplateCount() int32 {
	if m != nil {
		return m.TemplateCount
	}
	return 0
}

func (m *Generate) GetUserCount() int32 {
	if m != nil {
		return m.UserCount
	}
	return 0
}

func (m *Generate) GetBatchTimeout() int32 {
	if m != nil {
		return m.BatchTimeout
	}
	return 0
}

func (m *Generate) GetMaxMessageCount() int32 {
	if m != nil {
		return m.MaxMessageCount
	}
	return 0
}

func (m *Generate) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

// Crypto 请求生成区块链配置文件集合对象
type Crypto struct {
	LedgerName           string   `protobuf:"bytes,1,opt,name=ledgerName,proto3" json:"ledgerName,omitempty"`
	Version              Version  `protobuf:"varint,2,opt,name=version,proto3,enum=geneses.Version" json:"version,omitempty"`
	Force                bool     `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Crypto) Reset()         { *m = Crypto{} }
func (m *Crypto) String() string { return proto.CompactTextString(m) }
func (*Crypto) ProtoMessage()    {}
func (*Crypto) Descriptor() ([]byte, []int) {
	return fileDescriptor_104dc51ee168266a, []int{1}
}

func (m *Crypto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Crypto.Unmarshal(m, b)
}
func (m *Crypto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Crypto.Marshal(b, m, deterministic)
}
func (m *Crypto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Crypto.Merge(m, src)
}
func (m *Crypto) XXX_Size() int {
	return xxx_messageInfo_Crypto.Size(m)
}
func (m *Crypto) XXX_DiscardUnknown() {
	xxx_messageInfo_Crypto.DiscardUnknown(m)
}

var xxx_messageInfo_Crypto proto.InternalMessageInfo

func (m *Crypto) GetLedgerName() string {
	if m != nil {
		return m.LedgerName
	}
	return ""
}

func (m *Crypto) GetVersion() Version {
	if m != nil {
		return m.Version
	}
	return Version_V14
}

func (m *Crypto) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

// ChannelTX 请求生成区块链配置文件集合对象
type ChannelTX struct {
	LedgerName           string   `protobuf:"bytes,1,opt,name=ledgerName,proto3" json:"ledgerName,omitempty"`
	Version              Version  `protobuf:"varint,2,opt,name=version,proto3,enum=geneses.Version" json:"version,omitempty"`
	ChannelName          string   `protobuf:"bytes,3,opt,name=channelName,proto3" json:"channelName,omitempty"`
	Force                bool     `protobuf:"varint,4,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelTX) Reset()         { *m = ChannelTX{} }
func (m *ChannelTX) String() string { return proto.CompactTextString(m) }
func (*ChannelTX) ProtoMessage()    {}
func (*ChannelTX) Descriptor() ([]byte, []int) {
	return fileDescriptor_104dc51ee168266a, []int{2}
}

func (m *ChannelTX) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelTX.Unmarshal(m, b)
}
func (m *ChannelTX) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelTX.Marshal(b, m, deterministic)
}
func (m *ChannelTX) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelTX.Merge(m, src)
}
func (m *ChannelTX) XXX_Size() int {
	return xxx_messageInfo_ChannelTX.Size(m)
}
func (m *ChannelTX) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelTX.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelTX proto.InternalMessageInfo

func (m *ChannelTX) GetLedgerName() string {
	if m != nil {
		return m.LedgerName
	}
	return ""
}

func (m *ChannelTX) GetVersion() Version {
	if m != nil {
		return m.Version
	}
	return Version_V14
}

func (m *ChannelTX) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *ChannelTX) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func init() {
	proto.RegisterEnum("geneses.Version", Version_name, Version_value)
	proto.RegisterType((*Generate)(nil), "geneses.Generate")
	proto.RegisterType((*Crypto)(nil), "geneses.Crypto")
	proto.RegisterType((*ChannelTX)(nil), "geneses.ChannelTX")
}

func init() { proto.RegisterFile("grpc/proto/geneses/conf.proto", fileDescriptor_104dc51ee168266a) }

var fileDescriptor_104dc51ee168266a = []byte{
	// 343 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xcd, 0x4a, 0xfb, 0x50,
	0x10, 0xc5, 0xff, 0x69, 0xda, 0x26, 0x99, 0xff, 0x57, 0xb9, 0xb8, 0x08, 0xa2, 0x12, 0x8a, 0x8b,
	0x58, 0x30, 0xc5, 0x8f, 0x27, 0x68, 0x16, 0x82, 0xa0, 0x48, 0x28, 0x45, 0xdc, 0xdd, 0xa6, 0x93,
	0x34, 0x92, 0xdc, 0x09, 0x37, 0xb7, 0xa2, 0x2f, 0xa1, 0xaf, 0x2c, 0xbd, 0x49, 0x6d, 0xaa, 0x0b,
	0x37, 0x2e, 0xe7, 0x37, 0x87, 0x73, 0x86, 0xe1, 0xc0, 0x61, 0x2a, 0xcb, 0x78, 0x5c, 0x4a, 0x52,
	0x34, 0x4e, 0x51, 0x60, 0x85, 0xd5, 0x38, 0x26, 0x91, 0x04, 0x1a, 0x31, 0xab, 0x61, 0xc3, 0xd7,
	0x0e, 0xd8, 0x57, 0x28, 0x50, 0x72, 0x85, 0xec, 0x08, 0x20, 0xc7, 0x45, 0x8a, 0xf2, 0x96, 0x17,
	0xe8, 0x1a, 0x9e, 0xe1, 0x3b, 0x51, 0x8b, 0xac, 0xf7, 0x24, 0x17, 0x28, 0x43, 0x5a, 0x09, 0xe5,
	0x76, 0x3c, 0xc3, 0xef, 0x45, 0x2d, 0xc2, 0xf6, 0xc1, 0x26, 0x99, 0xd6, 0x5b, 0x53, 0x6f, 0x3f,
	0x66, 0x76, 0x0c, 0x7f, 0x15, 0x16, 0x65, 0xce, 0x15, 0xd6, 0x82, 0xae, 0x16, 0xec, 0x42, 0x76,
	0x00, 0xce, 0xaa, 0xda, 0x04, 0xf4, 0xb4, 0x62, 0x0b, 0xd8, 0x10, 0xfe, 0xcc, 0xb9, 0x8a, 0x97,
	0xd3, 0xac, 0x40, 0x5a, 0x29, 0xb7, 0xaf, 0x05, 0x3b, 0x8c, 0xf9, 0xf0, 0xbf, 0xe0, 0xcf, 0x37,
	0x58, 0x55, 0x3c, 0x6d, 0x92, 0x2c, 0x2d, 0xfb, 0x8c, 0xd9, 0x1e, 0xf4, 0x12, 0x92, 0x31, 0xba,
	0xb6, 0x67, 0xf8, 0x76, 0x54, 0x0f, 0xc3, 0x47, 0xe8, 0x87, 0xf2, 0xa5, 0x54, 0xf4, 0xed, 0x37,
	0x46, 0x60, 0x3d, 0xa1, 0xac, 0x32, 0x12, 0xfa, 0x15, 0xff, 0xce, 0x07, 0x41, 0xf3, 0xd5, 0x60,
	0x56, 0xf3, 0x68, 0x23, 0xd8, 0x66, 0x99, 0xed, 0xac, 0x37, 0x03, 0x9c, 0x70, 0xc9, 0x85, 0xc0,
	0x7c, 0x7a, 0xff, 0xa3, 0x79, 0x1e, 0xfc, 0x8e, 0x6b, 0x63, 0x6d, 0x66, 0x6a, 0xb3, 0x36, 0xda,
	0x5e, 0xd4, 0x6d, 0x5d, 0x34, 0x62, 0x60, 0x35, 0x5e, 0xcc, 0x02, 0x73, 0x76, 0x76, 0x39, 0xf8,
	0x35, 0xb9, 0x86, 0x93, 0x8c, 0x02, 0x14, 0x82, 0x28, 0x48, 0xf8, 0x5c, 0x66, 0xf1, 0x69, 0x9c,
	0x67, 0x28, 0x54, 0xb0, 0xee, 0x58, 0x5d, 0xa8, 0xcd, 0x25, 0x13, 0x27, 0x24, 0x91, 0xdc, 0xad,
	0xd1, 0x03, 0xfb, 0x5a, 0xc1, 0x79, 0x5f, 0x8f, 0x17, 0xef, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb3,
	0xd0, 0x9f, 0xe4, 0x9f, 0x02, 0x00, 0x00,
}

/*
 * Copyright (c) 2019. Aberic - All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package raft;

// node 节点信息
message node {
    // 节点ID
    string id = 1;
    // 节点地址
    string url = 2;
}

// hBeat 用于Leader节点复制日志给其他节点，也作为心跳
//
// prevLogIndex和prevLogTerm表示上一次发送的日志的索引和任期，用于保证收到的日志是连续的
message hBeat {
    // Leader节点的任期
    int32 term = 1;
    // Leader节点的ID
    string leaderId = 2;
    // 当前配置版本 index 递增
    int32 version = 4;
    // 当前term同步配置信息
    bytes config = 5;
}

// hBeatReturn 接收者实现逻辑
//
// 返回false，如果收到的任期比当前任期小
//
// 返回false，如果不包含之前的日志条目（没有匹配prevLogIndex和prevLogTerm）
//
// 如果存在index相同但是term不相同的日志，删除从该位置开始所有的日志
//
// 追加所有不存在的日志
//
// 如果leaderCommit>commitIndex，将commitIndex设置为commitIndex = min(leaderCommit, index of last new entry)
message hBeatReturn {
    // 当前任期号，用于Leader节点更新自己的任期（应该说是如果这个返回值比Leader自身的任期大，那么Leader需要更新自己的任期）
    int32 term = 1;
    // 如果Follower节点匹配prevLogIndex和prevLogTerm，返回true
    bool success = 2;
}

// reqVote 用于Candidate获取选票
message reqVote {
    // Candidate的任期
    int32 term = 1;
    // Candidate的ID
    string candidateId = 2;
    // Candidate的URL
    string url = 3;
    // Candidate最后Leader节点的ID
    string lastLeaderId = 4;
    // Candidate最后一条日志的版本
    int32 lastVersion = 5;
    // Candidate最后一条日志的任期
    int32 lastTerm = 6;
    // 时间戳ns
    int64 timestamp = 7;
}

// 接收者的实现逻辑
//
// 返回false，如果收到的任期比当前任期小
//
// 如果本地状态中votedFor为null或者candidateId，且candidate的日志等于或多余（按照index判断）接收者的日志，则接收者投票给candidate，即返回true
message reqVoteReturn {
    // 当前任期，用于Candidate更新自己的任期
    int32 term = 1;
    // true表示给Candidate投票
    bool voteGranted = 2;
}

service Raft {
    // HeartBeat 发送心跳
    rpc heartbeat (hBeat) returns (hBeatReturn) {
    }
    // RequestVote 发起选举，索要选票
    rpc requestVote (reqVote) returns (reqVoteReturn) {
    }
}
